#элементы кортежей менять нельзя, в отличие от списков

a = 1, 2 #(1, 2)
a = (1,2,3) #(1, 2, 3)

#кортеж из одного элемента
a = (1, ) #(1,)

#распаковка кортежа (тоэе множественное присваивание)
x , t , j = (1 ,2, 3)
#x = 1
#y = 2
#j = 3

#длинна кортежа
a = (1,2,3)
len(a) #3

#элемен по индексу / срезы (как в списках)
a[0] #1
a[1:2] #2
a[0:2] #1,2

#можем использовать кортежи в качестве ключей для словарей (ибо кортежи неизменяемые)
d = {}
d[a] = "python" #{(1, 2, 3): 'python'}

#пустой кортеж
a = () #или
b = tuple()
#поскольку кортежи неизменяемые, то в них нельзя засунуть значения, они такими пустыми и остануться

#можно обьединять кортежи
a = () #empty
a = a + (1,) #empty + new (1,) = (1,); теперь a - это новый кортеж с обьединенными значениями

a = (1,2,3)
a += (("a", "hello"),) #(1, 2, 3, ('a', 'hello'))

#дублируем элементы кортежа, как в списках
b = (0,) * 10 #(0, 0, 0, 0, 0, 0, 0, 0, 0, 0)

#удалять элементы кортежа нельзя, так же как их апдейтить

#сделать кортеж из списка/строки
a = tuple([1, 2, 3]) #(1, 2, 3)
a = tuple("hello") #('h', 'e', 'l', 'l', 'o')

#превратить кортеж обратно в список (где можно наконец изменять значения элементов)
a = (1,2,3)
b = list(a) #[1 ,2 ,3]

#мы можем менять изменяемые типы данных внутри кортежа
#мы можем изменить список внутри кортежа, добавив туда элемент, например
a = (True, [1, 2, 3], "hello", 5, {"house":"дом"})
a[1] #[1, 2, 3]
a[1].append("5") #[1, 2, 3, '5']
#a = (True, [1, 2, 3, '5'], 'hello', 5, {'house': 'дом'})

#кол-во конкретных элементов из кортежа
a = ("abc", 2, [1, 2], True, 2, 5)
a.count("abc") #1
a.count(2) #2
#если элемент не найден, возвращает 0

#индекс первого найденного указанного элемента
a.index("abc") #0
a.index(2) #1 (первая найденная сначала двойка)
a.index(2, 2) #4 (вторая двойка, т.к. мы прописали в скобках с какого индекса начинать поиск элемента)
a.index(2, 2, 5) #4 ищем 2ку, начиная со второго индекса, заканчивая 4ым индексом

#входит элемент в кортеж или нет
3 in a #False
[1, 2] in a #True
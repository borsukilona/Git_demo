d = {"house": "дом",
     "car": "машина",
     "tree": "дерево",
     "road": "дорога",
     "river": "река"}

d["house"] #'дом'

dict(one=1, two=3, three='3', four='4') #{'one': 1, 'two': 3, 'three': '3', 'four': '4'}


#превратить список в словарь
lst = [[2, "bad"], [3, "middle"], [4, "good"], [5, "excellent"]]
dict(lst) #{2: 'bad', 3: 'middle', 4: 'good', 5: 'excellent'}

#добавить в словарь новые значения с новым ключом
d = {}
d[True] = "True"
d[False] = "False"
#d = {True: 'True', False: 'False'}

#Изменить значение уже существующего ключа в словаре
d[True] = "Ttttt"
#d = {True: 'Ttttt', False: 'False'}


len(d) #количество пар "ключ:значение" в словаре
del d[True] #удалить пару "ключ:значение" из словаря
"abc" in d #true/false есть ли такой ключ в словаре (именно ключ)
"abc" not in d #true/false отсутствует ли такой ключ в словаре (именно ключ)

#----------
'''s = "=".join(input().split()).replace("="," ").split() #['one', '1', 'two', '2', 'three', '3']
d = {}

for i in range(len(s)):
    if i % 2 == 0:
        d[s[i]] = int(s[i+1])
print(*sorted(d.items()))'''

#----------
'''s = input().split()
d = {}

for i in range(len(s)):
    key, value = s[i].split("=")
    d[key] = value'''


#создаем словарь с заданными ключами, и можно указать значение (одно) для каждого из кодов
lst = ["+7", "+6", "+5", "+4"]
a = dict.fromkeys(lst, "code") #{'+7': 'code', '+6': 'code', '+5': 'code', '+4': 'code'}

#очистка словаря
a.clear() #{}

#копия словаря
a = {True: 1, False: "Loz", "list": [1,2,3], 5: 5}
d = a.copy()
#или
c = dict(a)

#получить значение по ключу
a.get("list") #[1, 2, 3]
# a[key] если несуществующий ключ туда засунуть, покажет ошибку
# a.get(key) если несуществующий ключ туда засунуть, вернет значение None
a.get(3, False) #если ключ не существует, то пусть вместо None вернеться значение False

#возвращает значение по ключу, НО если такого ключа в словаре нет, то создаст новый ключ с новым значением (которые мы указываем)
a = {True: 1, False: "Loz", "list": [1,2,3], 5: 5}
a.setdefault("list") #[1, 2, 3]
a.setdefault(3) #{True: 1, False: 'Loz', 'list': [1, 2, 3], 5: 5, 3: None}
a.setdefault(4, "new") #{True: 1, False: 'Loz', 'list': [1, 2, 3], 5: 5, 3: None, 4: 'new'}

#удалить пару ключ-значение из словаря по ключу
a.pop(3) #{True: 1, False: 'Loz', 'list': [1, 2, 3], 5: 5, 4: 'new'}, метод возвращает удаленное значение
a.pop('abs', False) #если ключа нет такого, то либо будет ошибка, либо мы может указать, что возвращать в этом случае (наример, False)
a.popitem() # удаляет последний элемент (пару ключ-значение) словаря и возвращает эту удаленную пару (4, 'new')
#{True: 1, False: 'Loz', 'list': [1, 2, 3], 5: 5}

#список ключей
a.keys() #dict_keys([True, False, 'list', 5])
'''for x in a:
     print(x)'''

#список значений
a.values() #dict_values([1, 'Loz', [1, 2, 3], 5])
'''for x in a.values():
     print(x)'''

#список кортежей "ключ-значение"
a.items() #dict_items([(True, 1), (False, 'Loz'), ('list', [1, 2, 3]), (5, 5)])
'''for x in a.items():
     print(x)'''

#если надо получить из словаря и ключи и значения:
'''for key, value in a.items():
     print(key, value)'''

#обновить значения словаря 1 значениями словаря 2
#если ключи где-то совпадут, то значение словаря 1 этого ключа замениться на значение из словаря 2
d = {'one':1, 'two':2, 'three':3, 'four':4}
d2 = {2:'неудовлетворительно', 3:'удовлетворительно','four':'хорошо',5:'отлично'}
d.update(d2) #{'one': 1, 'two': 2, 'three': 3, 'four': 'хорошо', 2: 'неудовлетворительно', 3: 'удовлетворительно', 5: 'отлично'}
#ключи 'four' совпали, поэтому значение заменилось
#ключи которые не совпали, просто добавились в словарь 1

d3 = {**d, **d2} #обединить два словаря+
d = d | d2 #тоже обьединение словарей, начиная с версии python 3.9


